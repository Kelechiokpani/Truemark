# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"Indicates exactly one field must be supplied and this field must not be `null`."
directive @oneOf on INPUT_OBJECT

type Assignment {
    courseId: ID!
    description: String
    id: ID!
    questions: [Question]!
    title: String!
}

type AssignmentSubmission {
    answers: [SubmissionAnswer]!
    assignmentId: ID!
    id: ID!
    score: Int!
    userId: ID!
}

type AuthResponse {
    success: Boolean!
    user: User
}

type Course {
    createdAt: String!
    description: String!
    id: ID!
    image: String!
    name: String!
    price: Float!
    updatedAt: String!
}

type CourseLession {
    courseModuleId: ID!
    createdAt: String!
    description: String!
    id: ID!
    name: String!
    updatedAt: String!
    video: String!
}

type CourseLessionResponse {
    lession: CourseLession!
    success: Boolean!
}

type CourseModule {
    courseId: ID!
    createdAt: String!
    description: String!
    id: ID!
    image: String!
    name: String!
    updatedAt: String!
}

type CourseModuleResponse {
    courseModule: CourseModule!
    success: Boolean!
}

type CourseResponse {
    course: Course!
    success: Boolean!
}

type Enquiry {
    createdAt: String!
    email: String!
    id: ID!
    message: String!
    name: String!
    phoneNumber: String
    subject: String!
    updatedAt: String!
}

type File {
    encoding: String!
    filename: String!
    mimetype: String!
}

type ForgetPasswordResponse {
    message: String!
    success: Boolean!
}

type LoginResponse {
    accessToken: String!
    refreshToken: String!
    success: Boolean!
    user: User
}

type Mutation {
    buyCourse(courseIds: [ID!]!): PaymentResponse!
    createAccount(input: CreateAccountData!): AuthResponse!
    createAssignment(input: CreateAssignmentInput!): Assignment!
    createCourse(input: CourseInput!): CourseResponse!
    createCourseLesson(input: CreateLessionInput!): CourseLessionResponse!
    createCourseModule(input: CreateModuleInput!): CourseModuleResponse!
    createEnquiry(input: CreateEnquiryInput!): Enquiry!
    deleteCourse(id: ID!): Boolean!
    deleteCourseLesson(id: ID!): Boolean!
    deleteCourseModule(id: ID!): Boolean!
    forgetPassword(email: String!): ForgetPasswordResponse!
    login(input: LoginInput!): LoginResponse!
    submitAssignment(input: SubmitAssignmentInput!): AssignmentSubmission!
    updateCourse(input: UpdateCourse!): CourseResponse!
    updateCourseLesson(input: UpdateLessionInput!): CourseLessionResponse!
    updateCourseModule(input: UpdateModuleInput!): CourseModuleResponse!
    verifyForgotPassword(input: VerifyForgotPasswordInput!): ForgetPasswordResponse!
}

type Option {
    id: ID!
    optionText: String!
    questionId: ID!
}

type PaymentResponse {
    paymentReference: String!
    paymentUrl: String!
    success: Boolean!
}

type Query {
    getAssignment(assignmentId: ID!): Assignment
    getAssignmentSubmission(submissionId: ID!): AssignmentSubmission
    getAssignmentsByCourseId(courseId: ID!): [Assignment]
    getCourseLessions(moduleId: ID!): [CourseLession]!
    getCourseModules(courseId: ID!): [CourseModule]!
    getCourses: [Course]!
    getEnquiries(limit: Int, page: Int): [Enquiry!]!
    getEnrolledCourseModules(courseId: ID!): [CourseModule]!
    getEnrolledModuleLessions(moduleId: ID!): [CourseLession]!
    getUserEnrolledCourses: [Course]!
    getUserInfo: User!
    getUserSubmissionsForAssignment(assignmentId: ID!): [AssignmentSubmission]
    verifyPayment(reference: String!): Boolean!
}

type Question {
    assignmentId: ID!
    id: ID!
    options: [Option]!
    questionText: String!
}

type SubmissionAnswer {
    id: ID!
    questionId: ID!
    selectedOptionId: ID!
    submissionId: ID!
}

type User {
    createdAt: String!
    email: String!
    fullname: String!
    id: ID!
    isAdmin: Boolean!
    updatedAt: String!
}

scalar Upload

input CourseInput {
    description: String!
    image: String!
    name: String!
    price: Float!
}

input CreateAccountData {
    email: String!
    fullname: String!
    password: String!
}

input CreateAssignmentInput {
    courseId: ID!
    description: String
    questions: [CreateQuestionInput]!
    title: String!
}

input CreateEnquiryInput {
    email: String!
    message: String!
    name: String!
    phoneNumber: String
    subject: String!
}

input CreateLessionInput {
    courseModuleId: ID!
    description: String!
    name: String!
    video: String!
}

input CreateModuleInput {
    courseId: ID!
    description: String!
    image: String!
    name: String!
}

input CreateOptionInput {
    optionText: String!
}

input CreateQuestionInput {
    correctAnswer: String!
    options: [CreateOptionInput]!
    questionText: String!
}

input LoginInput {
    email: String!
    password: String!
}

input SubmitAnswerInput {
    questionId: ID!
    selectedOptionId: ID!
}

input SubmitAssignmentInput {
    answers: [SubmitAnswerInput]!
    assignmentId: ID!
}

input UpdateCourse {
    description: String!
    id: ID!
    image: String!
    name: String!
    price: Float!
}

input UpdateLessionInput {
    courseModuleId: ID!
    description: String!
    id: ID!
    name: String!
    video: String!
}

input UpdateModuleInput {
    courseId: ID!
    description: String!
    id: ID!
    image: String!
    name: String!
}

input VerifyForgotPasswordInput {
    email: String!
    otp: String!
    password: String!
}
